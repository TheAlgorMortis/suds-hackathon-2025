{
  "users": [
    {
      "username": "straws11",
      "name": "Dylan Swarts",
      "email": "dylan@example.com",
      "password": "pass1"
    },
    {
      "username": "algor",
      "name": "Dylan Reid",
      "email": "alsodylan@example.com",
      "password": "pass1"
    },
    {
      "username": "pixelwave",
      "name": "Riley Johnson",
      "email": "rileyj@example.com",
      "password": "pass1"
    },
    {
      "username": "nullstack",
      "name": "Ava Thompson",
      "email": "ava.t@example.com",
      "password": "pass1"
    },
    {
      "username": "byteforge",
      "name": "Ethan Clarke",
      "email": "ethan.c@example.com",
      "password": "pass1"
    },
    {
      "username": "syntaxsiren",
      "name": "Lara van Dyk",
      "email": "lara.vd@example.com",
      "password": "pass1"
    },
    {
      "username": "logicloop",
      "name": "Noah Pretorius",
      "email": "noah.p@example.com",
      "password": "pass1"
    }
  ],
  "modules": [
    {
      "code": "CS114",
      "name": "Introductory Computer Science 1",
      "description": "Introduction to basic computer programming; formulation and solution of problems by means of computer programming; data representation and variable types (including character strings, integers, floating point numbers and Boolean variables); assignment statements; conditional execution and iteration; static data structures (arrays and records); input and output (including graphics and sound); modular programming; recursion; testing and debugging; introduction to object-oriented programming (including abstraction, encapsulation and use of existing object implementations). ",
      "lecture_hours": 3,
      "tut_hours": 3

    },
    {
      "code": "CS144",
      "name": "Introductory Computer Science 2",
      "description": "Further formulation and solution of problems by means of computer programming; introductory data structures and algorithms in an object-oriented set-up; key concepts in object orientation: inheritance and polymorphism; design patterns as abstractions for the creation of reusable object-oriented designs; searching and sorting algorithms; complexity theory for the analysis of algorithms; fundamental methods in the design of algorithms; dynamic data structures; regular expressions and finite automata. ",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS214",
      "name": "Data Structures and Algorithms",
      "description": "The classical data structures and algorithms in an object-oriented set-up. Advanced techniques for the analysis of algorithms.",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS244",
      "name": "Computer Architecture",
      "description": "Basic computer architecture. Programming in machine language and assembly language. Assemblers, binders and loaders. Basic concepts of operating systems; memory management, process management and file systems.",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS313",
      "name": "Computer Networks",
      "description": "Introduction to networks in general and the internet in particular. Architecture and protocols. Allocation of resources and congestion control. Network security. Applications.",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS314",
      "name": "Concurrency",
      "description": "Introduction to programming techniques and principles of concurrent systems, from operating systems to application programs. This includes communication, synchronisation, scheduling and load balancing. Several parallel and distributed architectures will be covered.",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS315",
      "name": "Computer Networks",
      "description": "Unless you have completed Computer Science 315 or an equivalent, the following Computer Science module is also compulsory. Dimension reduction techniques; machine-learning techniques based on maximum-likelihood, maximum-posterior and expectation-maximization estimates; modelling using logistic regression, Gaussian mixtures and hidden Markov models. ",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS343",
      "name": "Databases and Web Centric Development",
      "description": "Introduction to relational databases. Mapping relational model onto object model. Implementing a database application in the context of the web. Web services. Server-side scalability. Virtualisation. Cloud Computing.",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS344",
      "name": "Program Design",
      "description": "Program specifications as guidelines for program design; reusable frameworks for program design; testability of program designs; development of a medium-sized system to illustrate the practical application of the principles of program design.",
      "lecture_hours": 3,
      "tut_hours": 3
    },
    {
      "code": "CS345",
      "name": "Computability and Automata Theory",
      "description": "Introduction to automata theory and formal languages, computability and complexity. Regular languages, context-free languages and grammars. Turing machines. P vs NP problem and NP completeness.",
      "lecture_hours": 3,
      "tut_hours": 3
    }
  ],
  "registrations": [
    { "user": "algor", "module": "CS114", "status": "distinction" },
    { "user": "algor", "module": "CS144", "status": "distinction" },
    { "user": "straws11", "module": "CS214", "status": "passed" },
    { "user": "straws11", "module": "CS244", "status": "passed"},
    { "user": "straws11", "module": "CS313", "status": "inProgress" },
    { "user": "algor", "module": "CS214", "status": "inProgress" },
    { "user": "algor", "module": "CS244", "status": "inProgress" },
    { "user": "pixelware", "module": "CS244", "status": "failed" },
    { "user": "nullstack", "module": "CS244", "status": "failed" },
    { "user": "nullstack", "module": "CS314", "status": "inProgress" }
  ]
}
