"""create initial tables

Revision ID: d5b0944f5058
Revises: 
Create Date: 2025-10-04 01:01:42.089532

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd5b0944f5058'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('modules',
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=10000), nullable=False),
    sa.Column('lecture_hours', sa.Integer(), nullable=False),
    sa.Column('tut_hours', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('module_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('registrations',
    sa.Column('status', sa.Enum('NOT_REGISTERED', 'IN_PROGRESS', 'FAILED', 'PASSED', 'DISTINCTION', name='status'), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'module_id')
    )
    op.create_table('requisites',
    sa.Column('parent_id', sa.UUID(), nullable=False),
    sa.Column('child_id', sa.UUID(), nullable=False),
    sa.Column('requisite_type', sa.Enum('COREQ', 'PREREQ', 'PREREQ_PASS', name='requisite_type'), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['modules.module_id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['modules.module_id'], ),
    sa.PrimaryKeyConstraint('parent_id', 'child_id')
    )
    op.create_table('reviews',
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('text', sa.String(length=10000), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('rating <= 10'),
    sa.CheckConstraint('rating >= 0'),
    sa.ForeignKeyConstraint(['module_id'], ['modules.module_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    op.create_table('votes',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('review_id', sa.UUID(), nullable=False),
    sa.Column('vote', sa.Enum('UP', 'DOWN', name='vote'), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.review_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'review_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('reviews')
    op.drop_table('requisites')
    op.drop_table('registrations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('modules')
    # ### end Alembic commands ###
